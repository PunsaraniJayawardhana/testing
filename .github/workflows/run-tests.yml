name: Deploy and Run Cypress Tests on EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          npx cypress install

      - name: Run Cypress Tests (Headless for coverage)
        run: |
          npm run test:coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-test:
    name: Deploy and Run Cypress on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > automation-key.pem
          chmod 600 automation-key.pem

      - name: SSH and Run Cypress Tests in Docker
        run: |
          ssh -o StrictHostKeyChecking=no -i automation-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            if [ ! -d ~/testing ]; then
              git clone https://github.com/your-org/testing.git ~/testing
            fi
            cd ~/testing
            git pull origin main

            echo "Running Cypress tests inside Docker container..."

            docker build -t cypress-tests .

            docker run \
              -e CYPRESS_baseUrl=http://login-app-forntend-bucket.s3-website-us-east-1.amazonaws.com \
              -e CYPRESS_RECORD_KEY=${{ secrets.CYPRESS_RECORD_KEY }} \
              cypress-tests \
              --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
          EOF
